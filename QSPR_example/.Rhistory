setwd("~/Dropbox/projects/camb_workshop/QSPR_example")
library(camb)
library(ggplot2)
library(doMC)
descriptors <- readRDS("descriptors.rds")
head(descriptors)
properties <- read.csv("properties.csv")
head(properties)
properties <- properties[properties$Kept==1, ]
targets <- data.frame(Name = properties$Name, target = properties$EXPT)
head(target)
head(targets)
p <- DensityResponse(descriptors$nAcid)
p + labs(title="LogS target value distribution")
p <- DensityResponse(descriptors$ALogP)
p + labs(title="LogS target value distribution")
p <- DensityResponse(descriptors$nHeavyAtom)
p + labs(title="LogS target value distribution")
DensityResponse(descriptors$nHeavyAtom)
DensityResponse
DensityResponse(descriptors$nHeavyAtom)
DensityResponse(descriptors$nCl)
DensityResponse
all <- merge(x=targets, y=descriptors, by="Name")
dim(all)
dim(targets)
dim(descriptors)
ids <- all$Name
ids
x <- all[3:ncol(all)]
x
dim(x)
x <- all[3:ncol(all)]
x <- all[,3:ncol(all)]
dim(x)
y <- all$target
dim(all)
x.finite <- ReplaceInfinitesWithNA(x)
SplitSet
dataset <- SplitSet(ids, x.imputed, y, percentage=20)
x.imputed <- x.finite
dataset <- SplitSet(ids, x.imputed, y, percentage=20)
is.na(x.finite)
which(is.na(x.finite))
which(is.na(x.finite), arr.ind=TRUE)
x.imputed[which(is.na(x.finite), arr.ind=TRUE)] <- 0
[which(is.na(x.imputed), arr.ind=TRUE)
which(is.na(x.imputed), arr.ind=TRUE)
ImputeFeatures
ReplaceInfinitesWithNA
which(is.na(x.finite), arr.ind=TRUE)
x.finite[which(is.na(x.finite), arr.ind=TRUE)]
dataset <- SplitSet(ids, x.imputed, y, percentage=20)
RemoveNearZeroVarianceFeatures
dataset <- RemoveNearZeroVarianceFeatures(dataset)
dataset <- RemoveHighlyCorrelatedFeatures(dataset)
RemoveHighlyCorrelatedFeatures
dataset <- RemoveHighlyCorrelatedFeatures(dataset)
dataset <- RemoveNearZeroVarianceFeatures(dataset)
GetCVTrainControl
dataset <- PreProcess(dataset)
PreProcess
dataset <- GetCVTrainControl(dataset)
GetCVTrainControl
?trControl
library(caret)
?trControl
?trainControl
registerDoMC(cores=1)
expGrid(-8, 4, 2, 2), .C = c(0.0001, 0.001, 0.01, 0.1, 1, 10, 100)
expand.grid(.sigma = expGrid(-8, 4, 2, 2), .C = c(0.0001, 0.001, 0.01, 0.1, 1, 10, 100))
expGrid
expGrid(-8, 4, 2, 2)
model <- readRDS("svmRadial.rds")
plot(model, metric = "RMSE")
model
RMSE_CV(model)
Rsquared_CV(model)
predict
holdout.predictions <- as.vector(predict(model, newdata = dataset$x.holdout))
holdout.predictions
CorrelationPlot(pred=holdout.predictions, obs=dataset$y.holdout)
CorrelationPlot(pred=holdout.predictions, obs=dataset$y.holdout, margin=1, main="LogS Observered vs Predicted", PointSize=3, ColMargin="red")
CorrelationPlot(pred=holdout.predictions, obs=dataset$y.holdout, margin=1, main="LogS Observered vs Predicted", PointSize=1, ColMargin="red")
Validation(holdout.predictions, dataset$y.holdout)
RMSE_CV(model)
Rsquared_CV(model)
?train
